plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.hande'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '3.4.1'
	implementation group: 'org.springframework.data', name: 'spring-data-jpa', version: '3.4.1'
	implementation group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '3.0.0'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.hibernate:hibernate-core:6.2.9.Final'
	implementation 'org.flywaydb:flyway-mysql'
	testImplementation group: 'com.h2database', name: 'h2', version: '2.3.232'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.4.1'
	implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
	implementation 'com.opencsv:opencsv:5.9'
	runtimeOnly 'com.mysql:mysql-connector-j:9.1.0'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	runtimeOnly 'org.springframework.boot:spring-boot-docker-compose'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mysql'

	integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
sourceSets {
	integrationTest {
		java {
			srcDir file('src/integrationTest/java')
		}
		resources {
			srcDir file('src/integrationTest/resources')
		}
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}

tasks.register('integrationTest', Test) {
	description = 'Runs the integration tests.'
	group = 'verification'
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	shouldRunAfter test
	useJUnitPlatform()
}

tasks.check {
	dependsOn integrationTest
}

defaultTasks 'clean', 'build'
